.PHONY: help
help:
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "$(BOLD)$(CYAN)%-25s$(RESET)%s\n", $$1, $$2}'

.PHONY: conformance
conformance: ## Regenerate the conformance golden samples. Only to be run when changes are expected
	go run ./test/conformance/generator/ test/conformance/testdata/

.PHONY: conformance-test
conformance-test: ## Run the conformance test suite
	go test ./test/conformance/...

.PHONY: proto
proto: ## Rebuild protobuf autogenerated code
	protoc --go_out=pkg api/sbom.proto

.PHONY: proto-gorm
proto-gorm: gorm.proto ## Compile protobufs with protoc-gen-gorm plugin
	mkdir -p beta
	sed -E 's/^(package bomsquad\.protobom)/\1\.beta/' api/sbom.proto > beta/sbom.proto

	protoc \
	  --go_out=pkg --go_opt=M'beta/sbom.proto=sbom/beta;beta' \
	  --gorm_out=pkg --gorm_opt=M'beta/sbom.proto=sbom/beta;beta' \
	  beta/sbom.proto

	$(RM) -r beta

gorm.proto:
	@echo Downloading protoc-gen-gorm...
	@PROTOC_GORM_VER=d3024d4fa7c9ce9d62e2f2cc0b42faf679211846 && \
	  go install github.com/infobloxopen/protoc-gen-gorm@$$PROTOC_GORM_VER && \
	  curl -LO https://raw.githubusercontent.com/infobloxopen/protoc-gen-gorm/$$PROTOC_GORM_VER/proto/options/gorm.proto

.PHONY: fakes
fakes: ## Rebuild the fake implementations
	go generate ./...
