// --------------------------------------------------------------
// SPDX-FileCopyrightText: Copyright Â© 2024 The Protobom Authors
// SPDX-FileType: SOURCE
// SPDX-License-Identifier: Apache-2.0
// --------------------------------------------------------------

syntax = "proto3";

package protobom.v1;

// HashAlgorithm represents the hashing algorithms used within the Software Bill of Materials (SBOM) document.
// It enumerates various hash algorithms that can be employed to generate checksums or unique identifiers for files or data.
enum HashAlgorithm {
  // Unknown hash algorithm.
  UNKNOWN = 0;
  // MD5 hash algorithm.
  MD5 = 1;
  // SHA-1 hash algorithm.
  SHA1 = 2;
  // SHA-256 hash algorithm.
  SHA256 = 3;
  // SHA-384 hash algorithm.
  SHA384 = 4;
  // SHA-512 hash algorithm.
  SHA512 = 5;
  // SHA3-256 hash algorithm.
  SHA3_256 = 6;
  // SHA3-384 hash algorithm.
  SHA3_384 = 7;
  // SHA3-512 hash algorithm.
  SHA3_512 = 8;
  // BLAKE2B-256 hash algorithm.
  BLAKE2B_256 = 9;
  // BLAKE2B-384 hash algorithm.
  BLAKE2B_384 = 10;
  // BLAKE2B-512 hash algorithm.
  BLAKE2B_512 = 11;
  // BLAKE3 hash algorithm.
  BLAKE3 = 12;
  // MD2 hash algorithm, not supported by SPDX formats.
  MD2 = 13;
  // Adler-32 hash algorithm, not supported by SPDX formats..
  ADLER32 = 14;
  // MD4 hash algorithm, not supported by SPDX formats..
  MD4 = 15;
  // MD6 hash algorithm, not supported by SPDX formats..
  MD6 = 16;
  // SHA-224 hash algorithm, not supported by SPDX formats..
  SHA224 = 17;
}

// Purpose represents different purposes or roles assigned to software entities within the Software Bill of Materials (SBOM).
// It categorizes the roles that software components can fulfill.
enum Purpose {
  // Unknown purpose.
  UNKNOWN_PURPOSE = 0;
  // Application purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  APPLICATION = 1;
  // Archive purpose. (SPDX2.3, SPDX3.0)
  ARCHIVE = 2;
  // BOM purpose. (SPDX3.0)
  BOM = 3;
  // Configuration purpose. (SPDX3.0)
  CONFIGURATION = 4;
  // Container purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  CONTAINER = 5;
  // Data purpose. (CDX1.5, SPDX3.0)
  DATA = 6;
  // Device purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  DEVICE = 7;
  // Device Driver purpose. (CDX1.5, SPDX3.0)
  DEVICE_DRIVER = 8;
  // Documentation purpose. (SPDX3.0)
  DOCUMENTATION = 9;
  // Evidence purpose. (SPDX3.0)
  EVIDENCE = 10;
  // Executable purpose. (SPDX3.0)
  EXECUTABLE = 11;
  // File purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  FILE = 12;
  // Firmware purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  FIRMWARE = 13;
  // Framework purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  FRAMEWORK = 14;
  // Install purpose. (SPDX2.3, SPDX3.0)
  INSTALL = 15;
  // Library purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  LIBRARY = 16;
  // Machine Learning Model purpose. (CDX1.5)
  MACHINE_LEARNING_MODEL = 17;
  // Manifest purpose. (SPDX3.0)
  MANIFEST = 18;
  // Model purpose. (SPDX3.0)
  MODEL = 19;
  // Module purpose. (SPDX3.0)
  MODULE = 20;
  // Operating System purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  OPERATING_SYSTEM = 21;
  // Other purpose. (SPDX2.3, SPDX3.0)
  OTHER = 22;
  // Patch purpose. (SPDX3.0)
  PATCH = 23;
  // Platform purpose. (SPDX2.3, CDX1.5, SPDX3.0)
  PLATFORM = 24;
  // Requirement purpose. (SPDX3.0)
  REQUIREMENT = 25;
  // Source purpose. (SPDX2.3, SPDX3.0)
  SOURCE = 26;
  // Specification purpose. (SPDX3.0)
  SPECIFICATION = 27;
  // Test purpose. (SPDX3.0)
  TEST = 28;
}

// SoftwareIdentifierType represents different types of identifiers used
// for software entities within the Software Bill of Materials (SBOM).
enum SoftwareIdentifierType {
  // Unknown software identifier type.
  UNKNOWN_IDENTIFIER_TYPE = 0;
  // Package URL (PURL) identifier type.
  PURL = 1;
  // Common Platform Enumeration (CPE) version 2.2 identifier type.
  CPE22 = 2;
  // Common Platform Enumeration (CPE) version 2.3 identifier type.
  CPE23 = 3;
  // Git Object Identifier (OID) identifier type.
  GITOID = 4;
}
